{"version":3,"sources":["api/campaign/campaign.controller.js"],"names":["myCampaigns","pubCampaignsCalendar","pubCampaigns","index","show","create","update","destroy","config","email","telerivet","require","sendSMS","contact","API_KEY","PROJECT_ID","tr","API","project","initProjectById","sendMessage","to_number","content","err","message","console","log","CampaignPlaced","res","statusCode","req","body","to","send","mailOptions","entity","status","json","CampaignUpdated","respondWithResult","saveUpdates","updates","updated","merge","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","isJson","str","JSON","parse","e","q","query","where","find","campaigns","Order","aggregate","$unwind","$project","_id","title","start","allDay","result","exec","catch","findById","params","id","uid","user","shortId","campaignNo","generate","__v","items","name","$set","price","category","quantity"],"mappings":"AAAA;;;;;;;;;AASA;;;;;QAkHgBA,W,GAAAA,W;QAsBAC,oB,GAAAA,oB;QAgBAC,Y,GAAAA,Y;QAmBAC,K,GAAAA,K;QAOAC,I,GAAAA,I;QAQAC,M,GAAAA,M;QAYAC,M,GAAAA,M;QAyBAC,O,GAAAA,O;;AA3NhB;;;;AACA;;;;AACA;;IAAYC,M;;AACZ;;IAAYC,K;;;;;;AAEZ,IAAIC,YAAYC,QAAQ,WAAR,CAAhB;;AAGA,SAASC,OAAT,CAAiBC,OAAjB,EAAyB;;AAEzB,MAAIC,UAAU,kCAAd,CAFyB,CAE0B;AACnD,MAAIC,aAAa,oBAAjB;;AAEA,MAAIC,KAAK,IAAIN,UAAUO,GAAd,CAAkBH,OAAlB,CAAT;;AAEA,MAAII,UAAUF,GAAGG,eAAH,CAAmBJ,UAAnB,CAAd;;AAEA;;AAEAG,UAAQE,WAAR,CAAoB;AAChBC,eAAW,eADK;AAEhBC,aAAS;AAFO,GAApB,EAGG,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACtB,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,YAAQC,GAAR,CAAYF,OAAZ;AACH,GAND;AAUC;;AAGD,SAASG,cAAT,CAAwBC,GAAxB,EAA6BC,UAA7B,EAAyC;AACvCD,MAAIE,GAAJ,CAAQC,IAAR,CAAaC,EAAb,GAAkBJ,IAAIE,GAAJ,CAAQC,IAAR,CAAatB,KAA/B;AACCA,QAAMwB,IAAN,CAAWzB,OAAO0B,WAAP,CAAmBP,cAAnB,CAAkCC,IAAIE,GAAJ,CAAQC,IAA1C,CAAX;;AAEDF,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASM,MAAT,EAAiB;AACtB,QAAIA,MAAJ,EAAY;AACVP,UAAIQ,MAAJ,CAAWP,UAAX,EAAuBQ,IAAvB,CAA4BF,MAA5B;AACD;AACF,GAJD;AAKD;;AAED,SAASG,eAAT,CAAyBV,GAAzB,EAA8BC,UAA9B,EAA0C;AACxCpB,QAAMwB,IAAN,CAAWzB,OAAO0B,WAAP,CAAmBI,eAAnB,CAAmCV,IAAIE,GAAJ,CAAQC,IAA3C,CAAX;;AAEAF,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASM,MAAT,EAAiB;AACtB,QAAIA,MAAJ,EAAY;AACVP,UAAIQ,MAAJ,CAAWP,UAAX,EAAuBQ,IAAvB,CAA4BF,MAA5B;AACD;AACF,GAJD;AAKD;;AAED,SAASI,iBAAT,CAA2BX,GAA3B,EAAgCC,UAAhC,EAA4C;AAC1CA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASM,MAAT,EAAiB;AACtB,QAAIA,MAAJ,EAAY;AACVP,UAAIQ,MAAJ,CAAWP,UAAX,EAAuBQ,IAAvB,CAA4BF,MAA5B;AACD;AACF,GAJD;AAKD;;AAED,SAASK,WAAT,CAAqBC,OAArB,EAA8B;;AAE5B;;;AAGA,SAAO,UAASN,MAAT,EAAiB;;AAEtB,QAAIO,UAAU,iBAAEC,KAAF,CAAQR,MAAR,EAAgBM,OAAhB,CAAd;;AAGA,WAAOC,QAAQE,IAAR,GACJC,IADI,CACC,mBAAW;AACf,aAAOH,OAAP;AACD,KAHI,CAAP;AAID,GATD;AAUD;;AAED,SAASI,YAAT,CAAsBlB,GAAtB,EAA2B;AACzB,SAAO,UAASO,MAAT,EAAiB;AACtB,QAAIA,MAAJ,EAAY;AACV,aAAOA,OAAOY,MAAP,GACJF,IADI,CACC,YAAM;AACVjB,YAAIQ,MAAJ,CAAW,GAAX,EAAgBY,GAAhB;AACD,OAHI,CAAP;AAID;AACF,GAPD;AAQD;;AAED,SAASC,oBAAT,CAA8BrB,GAA9B,EAAmC;AACjC,SAAO,UAASO,MAAT,EAAiB;AACtB,QAAI,CAACA,MAAL,EAAa;AACXP,UAAIQ,MAAJ,CAAW,GAAX,EAAgBY,GAAhB;AACA,aAAO,IAAP;AACD;AACD,WAAOb,MAAP;AACD,GAND;AAOD;;AAED,SAASe,WAAT,CAAqBtB,GAArB,EAA0BC,UAA1B,EAAsC;AACpCA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASN,GAAT,EAAc;AACnBK,QAAIQ,MAAJ,CAAWP,UAAX,EAAuBI,IAAvB,CAA4BV,GAA5B;AACD,GAFD;AAGD;;AAED;AACO,SAASvB,WAAT,CAAqB8B,GAArB,EAA0BF,GAA1B,EAA+B;AACpC,WAASuB,MAAT,CAAgBC,GAAhB,EAAqB;AACrB,QAAI;AACAA,YAAMC,KAAKC,KAAL,CAAWF,GAAX,CAAN;AACH,KAFD,CAEE,OAAOG,CAAP,EAAU;AACRH,YAAMA,GAAN;AACH;AACD,WAAOA,GAAP;AACD;AACC,MAAII,IAAIL,OAAOrB,IAAI2B,KAAJ,CAAUC,KAAjB,CAAR;AACAjC,UAAQC,GAAR,CAAY8B,CAAZ;;AAEA,qBAASG,IAAT,CAAcH,CAAd,EAAgB,UAAUjC,GAAV,EAAeqC,SAAf,EAA0B;AACxC,QAAGrC,GAAH,EAAQ;AAAE,aAAO2B,YAAYtB,GAAZ,EAAiBL,GAAjB,CAAP;AAA+B;AACzC,WAAOK,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBuB,SAArB,CAAP;AACD,GAHD;AAID;;AAGD;AACA;;AAEO,SAAS3D,oBAAT,CAA8B6B,GAA9B,EAAmCF,GAAnC,EAAwC;AAC5CiC,QAAMC,SAAN,CAAgB,CACb,EAACC,SAAQ,QAAT,EADa,EAEb,EAACC,UAAU,EAAEC,KAAI,CAAN,EAASC,OAAO,MAAhB,EAAuBC,OAAO,kBAA9B,EAAiDnB,KAAK,gBAAtD,EAAuEoB,QAAO,KAA9E,EAAX,EAFa,CAAhB,EAGI,UAAU7C,GAAV,EAAe8C,MAAf,EAAuB;AACtB,QAAI9C,GAAJ,EAAS;AACLE,cAAQC,GAAR,CAAYH,GAAZ;AACA;AACH;;AAED,WAAOK,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBgC,MAArB,CAAP;AACH,GAVF;AAWF;;AAGD;AACO,SAASnE,YAAT,CAAsB4B,GAAtB,EAA2BF,GAA3B,EAAgC;AACpC,WAASuB,MAAT,CAAgBC,GAAhB,EAAqB;AACtB,QAAI;AACAA,YAAMC,KAAKC,KAAL,CAAWF,GAAX,CAAN;AACH,KAFD,CAEE,OAAOG,CAAP,EAAU;AACRH,YAAMA,GAAN;AACH;AACD,WAAOA,GAAP;AACD;AACC,MAAII,IAAIL,OAAOrB,IAAI2B,KAAJ,CAAUC,KAAjB,CAAR;AACAjC,UAAQC,GAAR,CAAY8B,CAAZ;;AAEA,qBAASG,IAAT,CAAcH,CAAd,EAAgB,UAAUjC,GAAV,EAAeqC,SAAf,EAA0B;AACxC,QAAGrC,GAAH,EAAQ;AAAE,aAAO2B,YAAYtB,GAAZ,EAAiBL,GAAjB,CAAP;AAA+B;AACzC,WAAOK,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBuB,SAArB,CAAP;AACD,GAHD;AAID;;AAED;AACO,SAASzD,KAAT,CAAe2B,GAAf,EAAoBF,GAApB,EAAyB;AAC9B,SAAO,mBAAS+B,IAAT,GAAgBW,IAAhB,GACJzB,IADI,CACCN,kBAAkBX,GAAlB,CADD,EAEJ2C,KAFI,CAEErB,YAAYtB,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAASxB,IAAT,CAAc0B,GAAd,EAAmBF,GAAnB,EAAwB;AAC7B,SAAO,mBAAS4C,QAAT,CAAkB1C,IAAI2C,MAAJ,CAAWC,EAA7B,EAAiCJ,IAAjC,GACJzB,IADI,CACCI,qBAAqBrB,GAArB,CADD,EAEJiB,IAFI,CAECN,kBAAkBX,GAAlB,CAFD,EAGJ2C,KAHI,CAGErB,YAAYtB,GAAZ,CAHF,CAAP;AAID;;AAED;AACO,SAASvB,MAAT,CAAgByB,GAAhB,EAAqBF,GAArB,EAA0B;AAC/BE,MAAIC,IAAJ,CAAS4C,GAAT,GAAe7C,IAAI8C,IAAJ,CAASnE,KAAxB,CAD+B,CACA;AAC/B,MAAIoE,UAAUlE,QAAQ,SAAR,CAAd;AACAmB,MAAIC,IAAJ,CAAS+C,UAAT,GAAsBD,QAAQE,QAAR,EAAtB;;AAEA;AACA,SAAO,mBAAS1E,MAAT,CAAgByB,IAAIC,IAApB,EACJc,IADI,CACClB,eAAeC,GAAf,EAAoB,GAApB,CADD,EAEJ2C,KAFI,CAEErB,YAAYtB,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAAStB,MAAT,CAAgBwB,GAAhB,EAAqBF,GAArB,EAA0B;AAC/B,MAAGE,IAAIC,IAAJ,CAASkC,GAAZ,EAAiB;AAAE,WAAOnC,IAAIC,IAAJ,CAASkC,GAAhB;AAAsB;AACzC,MAAGnC,IAAIC,IAAJ,CAASiD,GAAZ,EAAiB;AAAE,WAAOlD,IAAIC,IAAJ,CAASiD,GAAhB;AAAsB;AACzCvD,UAAQC,GAAR,CAAYI,IAAIC,IAAhB;;AAEA,MAAG,CAACD,IAAIC,IAAJ,CAASK,MAAb,EAAoB;;AAElB,uBAAS9B,MAAT,CACA,EAAE2D,KAAKnC,IAAI2C,MAAJ,CAAWC,EAAlB,EAAuB,cAAc5C,IAAIC,IAAJ,CAASkD,KAAT,CAAeC,IAApD,EADA,EAEA,EAAEC,MAAM,EAAE,iBAAiBrD,IAAIC,IAAJ,CAASkD,KAAT,CAAeG,KAAlC,EAA2C,oBAAoBtD,IAAIC,IAAJ,CAASkD,KAAT,CAAeI,QAA9E,EAA0F,oBAAoBvD,IAAIC,IAAJ,CAASkD,KAAT,CAAeK,QAA7H,EAAR,EAFA,EAGEhB,IAHF,GAICzB,IAJD,CAIMI,qBAAqBrB,GAArB,CAJN,EAKCiB,IALD,CAKMP,gBAAgBV,GAAhB,CALN,EAMC2C,KAND,CAMOrB,YAAYtB,GAAZ,CANP;AAOD,GATD,MASM,IAAGE,IAAIC,IAAJ,CAASK,MAAZ,EAAmB;AACzB,WAAO,mBAASoC,QAAT,CAAkB1C,IAAI2C,MAAJ,CAAWC,EAA7B,EAAiCJ,IAAjC,GACJzB,IADI,CACCI,qBAAqBrB,GAArB,CADD,EAEJiB,IAFI,CAECL,YAAYV,IAAIC,IAAhB,CAFD,EAGJc,IAHI,CAGCP,gBAAgBV,GAAhB,CAHD,EAIJ2C,KAJI,CAIErB,YAAYtB,GAAZ,CAJF,CAAP;AAKD;AAEA;;AAED;AACO,SAASrB,OAAT,CAAiBuB,GAAjB,EAAsBF,GAAtB,EAA2B;AAChC,SAAO,mBAAS4C,QAAT,CAAkB1C,IAAI2C,MAAJ,CAAWC,EAA7B,EAAiCJ,IAAjC,GACJzB,IADI,CACCI,qBAAqBrB,GAArB,CADD,EAEJiB,IAFI,CAECC,aAAalB,GAAb,CAFD,EAGJ2C,KAHI,CAGErB,YAAYtB,GAAZ,CAHF,CAAP;AAID","file":"campaign.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/Campaigns              ->  index\n * POST    /api/Campaigns              ->  create\n * GET     /api/Campaigns/:id          ->  show\n * PUT     /api/Campaigns/:id          ->  update\n * DELETE  /api/Campaigns/:id          ->  destroy\n */\n\n'use strict';\n\n\n\nimport _ from 'lodash';\nimport Campaign from './campaign.model';\nimport * as config from '../../config/environment/shared'\nimport * as email from '../sendmail/send'\n\nvar telerivet = require('telerivet');\n\n\nfunction sendSMS(contact){\n  \nvar API_KEY = 'm8DRXIAiyHEajBMZ0Kf6mAb6ZfUwtK5d';  // from https://telerivet.com/api/keys\nvar PROJECT_ID = 'PJ866bd4a877ff3d0e'; \n\nvar tr = new telerivet.API(API_KEY);\n\nvar project = tr.initProjectById(PROJECT_ID); \n\n// send message\n\nproject.sendMessage({\n    to_number: '+263773439246', \n    content: 'Hello from Mediabox!'\n}, function(err, message) {\n    if (err) throw err;\n    console.log(message);\n});\n\n\n\n}\n\n\nfunction CampaignPlaced(res, statusCode) {\n  res.req.body.to = res.req.body.email;\n   email.send(config.mailOptions.CampaignPlaced(res.req.body))\n\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction CampaignUpdated(res, statusCode) {\n  email.send(config.mailOptions.CampaignUpdated(res.req.body))\n\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n\n  //console.log(updates);\n\n\n  return function(entity) {\n\n    var updated = _.merge(entity, updates);\n\n    \n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Get all Campaigns by a user\nexport function myCampaigns(req, res) {\n  function isJson(str) {\n  try {\n      str = JSON.parse(str);\n  } catch (e) {\n      str = str;\n  }\n  return str\n}\n  var q = isJson(req.query.where);\n  console.log(q);\n\n  Campaign.find(q,function (err, campaigns) {\n    if(err) { return handleError(res, err); }\n    return res.status(200).json(campaigns);\n  });\n}\n\n\n// Get all campaigns for a publisher\n// List all advertising spaces\n\nexport function pubCampaignsCalendar(req, res) {\n   Order.aggregate([\n      {$unwind:\"$items\"},\n      {$project: { _id:0, title: \"name\",start: \"$items.startDate\",end: \"$items.endDate\",allDay:false}}\n    ], function (err, result) {\n        if (err) {\n            console.log(err);\n            return;\n        }\n         \n        return res.status(200).json(result);\n    });\n}\n\n\n// Get all Campaigns by a publisher\nexport function pubCampaigns(req, res) {\n   function isJson(str) {\n  try {\n      str = JSON.parse(str);\n  } catch (e) {\n      str = str;\n  }\n  return str\n}\n  var q = isJson(req.query.where);\n  console.log(q);\n\n  Campaign.find(q,function (err, campaigns) {\n    if(err) { return handleError(res, err); }\n    return res.status(200).json(campaigns);\n  });\n}\n\n// Gets a list of Campaigns\nexport function index(req, res) {\n  return Campaign.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Campaign from the DB\nexport function show(req, res) {\n  return Campaign.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Campaign in the DB\nexport function create(req, res) {\n  req.body.uid = req.user.email; // id change on every user creation hence email is used\n  var shortId = require('shortid');\n  req.body.campaignNo = shortId.generate();\n\n  // When Campaign.status is null, the client will replace with the Array[0] of Campaign status at Settings page\n  return Campaign.create(req.body)\n    .then(CampaignPlaced(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Campaign in the DB\nexport function update(req, res) {\n  if(req.body._id) { delete req.body._id; }\n  if(req.body.__v) { delete req.body.__v; }\n  console.log(req.body);\n\n  if(!req.body.status){ \n\n    Campaign.update( \n    { _id: req.params.id , \"items.name\": req.body.items.name  }, \n    { $set: { \"items.$.price\": req.body.items.price ,  \"items.$.category\": req.body.items.category ,  \"items.$.quantity\": req.body.items.quantity } }\n    ).exec()\n    .then(handleEntityNotFound(res))\n    .then(CampaignUpdated(res))\n    .catch(handleError(res));\n  }else if(req.body.status){\n  return Campaign.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(CampaignUpdated(res))\n    .catch(handleError(res));\n}\n\n}\n\n// Deletes a Campaign from the DB\nexport function destroy(req, res) {\n  return Campaign.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}